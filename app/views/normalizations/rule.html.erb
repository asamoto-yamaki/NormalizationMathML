<%= javascript_pack_tag 'user/application' %>
<?xml version="1.0" encoding="Shift_JIS" ?>
<!DOCTYPE html  PUBLIC
"-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" >
<h1>MathMLの一意な表現形式記述への変換ツール</h1>
  <head>
    <title>MathMLの一意な表現形式記述への変換ツール</title>
  </head>
  <body>
    <div style="margin:30px;">
    <input type="hidden" id="kekka" value="<%= @kekka %>">
    <div id="str_none"></div>
    <div id="str_mi_henkan"></div>
    <div id="str_af_or_it"></div>
    <div id="str_af_or_zahyou"></div>
    <div id="str_ip"></div>
    <div id="str_ic"></div>
    <div id="str_e"></div>
    <div id="str_tenchi"></div></br>
    <div id="str_d"></div>
    <script>
        const kekka_str = document.getElementById('kekka').value;
        //kekka_str = kekka_str.replace('\n', '')
        console.log(kekka_str);
        let str_none = "";
        let element_str = "";
        let str_mi_henkan = "";
        let str_af_or_it = "";
        let str_af_or_zahyou = "";
        let str_ip = "";
        let str_ic = "";
        let str_e = "";
        let str_tenchi = "";
        let str_d = "";
        let list_counter = 0;
        let element_change = 0;
        let in_array = 0;
        let list_mi = [];
        let list_mi_i = [];
        let list_mi_henkan = [];
        let list_mi_child = [];
        let list_af_or_it = [];
        let list_af_or_zahyou = [];
        let list_ip = [];
        let list_ic = [];
        let list_ic_mn = [];
        let list_e = [];
        let list_tenchi = [];
        let list_d = [];
        let list_mi_henkan_num = [];
        let list_mi_child_num = [];
        let list_af_or_it_num = [];
        let list_af_or_zahyou_num = [];
        let list_ip_num = [];
        let list_ic_num = [];
        let list_ic_mn_num = [];
        let list_e_num = [];
        let list_tenchi_num = [];
        let list_d_num = [];
        for (var i=0; i<kekka_str.length;i++){
            str_i = kekka_str.charAt(i);
            if(str_i == '['){
                list_counter += 1;
                element_str = "";
                element_change = 0;
                in_array = 1;
            }else if(str_i == ',' && kekka_str.charAt(i+2) != '/'){
                element_change = 1;
            }else if(in_array == 1){
                if(list_counter == 1){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                        list_mi_child.push(str_i);
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_mi_henkan.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        list_mi.push(list_mi_child);
                        list_mi_child = [];
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 2){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_mi_henkan_num.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 3){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_af_or_it.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 4){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_af_or_it_num.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 5){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_af_or_zahyou.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 6){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_af_or_zahyou_num.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 7){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_ip.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 8){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_ip_num.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 9){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_ic.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 10){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_ic_num.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 11){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_ic_mn.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 12){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_ic_mn_num.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 13){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_e.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 14){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_e_num.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter ==15){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_tenchi.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 16){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_tenchi_num.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 17){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_d.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }else if(list_counter == 18){
                    if(element_change == 0 && str_i != ']'){
                        element_str += str_i;
                    }else if(element_change == 1 || str_i == ']'){
                        if(element_str.length != 0){
                            list_d_num.push(element_str);
                        }
                        element_str = "";
                        element_change = 0;
                        if(element_change == 1){
                            element_str += str_i;
                        }
                    }
                }
            }
        }
        
        //変換箇所がなかった場合
        if(list_mi_henkan.length == 0 && list_af_or_it.length == 0 && list_af_or_zahyou.length == 0 && list_ip.length == 0 && list_ic.length == 0 && list_e.length == 0 && list_tenchi.length == 0 && list_d.length == 0){
            str_none = "変換ルールを選択する必要のある箇所は存在しません。<br/>自動変換対象の箇所が存在する可能性もあるので変換ボタンを押下してください。"
        }
    
        let sum_i = 0 //「全て選択」ボタンを識別するための変数
        let sum_j = 0 //同じ変換ルールの時の「n箇所目」のチェックボックスを識別するための変数
        let sum_i_j = 0 //「一つの変数」か「複数の変数」かを選ぶラジオボタンを識別するための変数
        //変数の変換に関するhtmlを作成
        str_mi_henkan += '<div style="margin:5px 0px;">'
        for (var i=0; i<list_mi_henkan.length;i++){
            sum_i += 1;
            sum_i_j += 1;
            list_mi_i = list_mi[i];
            lengthNot2 = false;
            if(list_mi_i.length != 2){
                lengthNot2 = true;
            }
            if(list_mi_henkan_num[i] != "1"){
                str_mi_henkan += '以下の変換箇所は複数箇所存在します。<br/>以下で最も多くの箇所に適用したいルールを選択してください。<br/>'
            }
            str_mi_henkan += '・' + list_mi_henkan[i] + 'を１つの変数として扱いますか、それとも複数の変数として扱いますか。<br/><input class="js-check' + sum_i_j + '" type="radio" name="integer' + sum_i_j + '" value="0" id="one' + sum_i_j + '" onclick="formSwitch(' + sum_i_j + ',' + lengthNot2 + ')"><label for="one' + sum_i_j + '">１つの変数として扱う</label><br/><input class="js-check' + sum_i_j + '" type="radio" name="integer' + sum_i_j + '" value="1" id="multiple' + sum_i_j + '" onclick="formSwitch(' + sum_i_j + ',' + lengthNot2 + ')"><label for="multiple' + sum_i_j + '">複数の変数として扱う</label><br/>';
            str_mi_henkan += '<span id="mi_selecter' + sum_i_j + '" style="padding:10px 10px; margin:0px 30px; background:lightblue; display:none;">変数の頭文字にチェックをつけてください。<br/>＊1番目の文字は自動的に頭文字に設定されます。<br/>';
            for(var j=1; j<list_mi_i.length;j++){
                str_mi_henkan += '<input type="checkbox" name="multi' + sum_i_j + '" value="' + j + '">' + list_mi_i[j];
            }
            str_mi_henkan += '</span><br/>';
            
            //同じルールを適用できる箇所を表示
            if(list_mi_henkan_num[i] != "1"){
                str_mi_henkan += '<div style="padding:10px 10px; margin:0px 30px; background:lightgray">上記で選択したものと同じルールを適用する箇所にチェックをつけてください。<br/>同じルールを適用しない場合には新しいルールを設定してください。<br/><form name="form"><label><input type="checkbox" name="all' + i + '" onClick="AllChecked(1,' + i + ',' + sum_j + ',' + list_mi_henkan_num[i] + ');" />全て選択</label><br/>'
                for(var j=0; j<list_mi_henkan_num[i];j++){
                    sum_j += 1;
                    sum_i_j += 1;
                    str_mi_henkan += '<label><input class="same_rule-check' + sum_j + '" type="checkbox" name="samerule' + i + '" value="' + j + '"  onClick="DisChecked(' + i + ');formSwitch2(' + sum_j + ')">' + (j+1) + '箇所目</label><br/>'
                    str_mi_henkan += '<span id="same_rule' + sum_j + '" style="display:block;">・' + list_mi_henkan[i] + 'を１つの変数として扱いますか、それとも複数の変数として扱いますか。<br/><input class="js-check' + sum_i_j + '" type="radio" name="integer' + sum_i_j + '" value="0" id="one' + sum_i_j + '" onclick="formSwitch(' + sum_i_j + ',' + lengthNot2 + ')"><label for="one' + sum_i_j + '">１つの変数として扱う</label><br/><input class="js-check' + sum_i_j + '" type="radio" name="integer' + sum_i_j + '" value="1" id="multiple' + sum_i_j + '" onclick="formSwitch(' + sum_i_j + ',' + lengthNot2 + ')"><label for="multiple' + sum_i_j + '">複数の変数として扱う</label><br/><br/>';
                    str_mi_henkan += '<span id="mi_selecter' + sum_i_j + '" style="display:none;">変数の頭文字にチェックをつけてください。<br/>＊1番目の文字は自動的に頭文字に設定されます。<br/>';
                    for(var k=1; k<list_mi_i.length;k++){
                        str_mi_henkan += '<input type="checkbox" name="multi' + sum_i_j + '" value="' + k + '">' + list_mi_i[k];
                    }
                    str_mi_henkan += '</span></span><br/>';
                }
                str_mi_henkan += '</form></div><br/>'
                //sum_j += list_mi_henkan_num.length;
            }
        }

        str_mi_henkan += '</div>'
    
        //関数か乗算になる箇所の変換に関するhtmlを作成
        str_af_or_it += '<div style="margin:5px 0px;">'
        for (var i=0; i<list_af_or_it.length;i++){
            sum_i += 1;
            
            if(list_af_or_it_num[i] != "1"){
                str_af_or_it += '以下の変換箇所は複数箇所存在します。<br/>以下で最も多くの箇所に適用したいルールを選択してください。<br/>'
            }
            str_af_or_it += '・<math xmlns="http://www.w3.org/1998/Math/MathML">' + list_af_or_it[i] +
            '</math>の数学的意味を１つ選択してください。<br/><input type="radio" name="af_or_it' + i + '" value="0" id="af' + i + '"><label for="af' + i + '">関数</label><br/><input type="radio" name="af_or_it' + i + '" value="1" id="it' + i + '"><label for="it' + i + '">乗算</label><br/><br/>';
            
            //同じルールを適用できる箇所を表示
            if(list_af_or_it_num[i] != "1"){
                str_af_or_it += '<div style="padding:10px 10px; margin:0px 30px; background:lightgray">上記で選択したものと同じルールを適用する箇所にチェックをつけてください。<br/><form name="form"><label><input type="checkbox" name="all' + sum_i + '" onClick="AllChecked(0,' + sum_i + ',' + sum_j + ',' + list_af_or_it_num[i] + ');" />全て選択</label><br/>'
                for(var j=0; j<list_af_or_it_num[i];j++){
                    sum_j += 1;
                    str_af_or_it += '<label><input type="checkbox" name="samerule' + sum_i + '" value="' + j + '"  onClick="DisChecked(' + sum_i + ');">' + (j+1) + '箇所目</label><br/>'
                }
                str_af_or_it += '</form></div><br/>'
            }
        }
        str_af_or_it += '</div>'
    
        //関数か座標になる箇所の変換に関するhtmlを作成
        str_af_or_zahyou += '<div style="margin:5px 0px;">'
        for (var i=0; i<list_af_or_zahyou.length;i++){
            sum_i += 1;
            if(list_af_or_zahyou_num[i] != "1"){
                str_af_or_zahyou += '以下の変換箇所は複数箇所存在します。<br/>以下で最も多くの箇所に適用したいルールを選択してください。<br/>'
            }
            str_af_or_zahyou += '・<math xmlns="http://www.w3.org/1998/Math/MathML">' + list_af_or_zahyou[i] +
            '</math>の数学的意味を１つ選択してください。<br/><input type="radio" name="af_or_zahyou' + i + '" value="0" id="af2' + i + '"><label for="af2' + i + '">関数</label><br/><input class="js-check' + i + '" type="radio" name="af_or_zahyou' + i + '" value="1" id="zahyou' + i + '"><label for="zahyou' + i + '">座標</label><br/><br/>';
            
            //同じルールを適用できる箇所を表示
            if(list_af_or_zahyou_num[i] != "1"){
                str_af_or_zahyou += '<div style="padding:10px 10px; margin:0px 30px; background:lightgray">上記で選択したものと同じルールを適用する箇所にチェックをつけてください。<br/><form name="form"><label><input type="checkbox" name="all' + sum_i + '" onClick="AllChecked(0,' + sum_i + ',' + sum_j + ',' + list_af_or_zahyou_num[i] + ');" />全て選択</label><br/>'
                for(var j=0; j<list_af_or_zahyou_num[i];j++){
                    sum_j += 1;
                    str_af_or_zahyou += '<label><input type="checkbox" name="samerule' + sum_i + '" value="' + j + '"  onClick="DisChecked(' + sum_i + ');">' + (j+1) + '箇所目</label><br/>'
                }
                str_af_or_zahyou += '</form></div><br/>'
            }
        }
        str_af_or_zahyou += '</div>'
    
        //帯分数の変換に関するhtmlを作成
        str_ip += '<div style="margin:5px 0px;">'
        for (var i=0; i<list_ip.length;i++){
            sum_i += 1;
            if(list_ip_num[i] != "1"){
                str_ip += '以下の変換箇所は複数箇所存在します。<br/>以下で最も多くの箇所に適用したいルールを選択してください。<br/>'
            }
            str_ip += '・<math xmlns="http://www.w3.org/1998/Math/MathML">' + list_ip[i] + '</math>は帯分数ですか、それとも整数と分数の乗算ですか。<br/><input class="js-check' + i + '" type="radio" name="ip' + i + '" value="0" id="ip' + i + '"><label for="ip' + i + '">帯分数</label><br/><input class="js-check' + i + '" type="radio" name="ip' + i + '" value="1" id="ipit' + i + '"><label for="ipit' + i + '">乗算</label><br/><br/>';
            
            //同じルールを適用できる箇所を表示
            if(list_ip_num[i] != "1"){
                str_ip += '<div style="padding:10px 10px; margin:0px 30px; background:lightgray">上記で選択したものと同じルールを適用する箇所にチェックをつけてください。<br/><form name="form"><label><input type="checkbox" name="all' + sum_i + '" onClick="AllChecked(0,' + sum_i + ',' + sum_j + ',' + list_ip_num[i] + ');" />全て選択</label><br/>'
                for(var j=0; j<list_ip_num[i];j++){
                    sum_j += 1;
                    str_ip += '<label><input type="checkbox" name="samerule' + sum_i + '" value="' + j + '"  onClick="DisChecked(' + sum_i + ');">' + (j+1) + '箇所目</label><br/>'
                }
                str_ip += '</form></div><br/>'
            }
        }
        str_ip += '</div>'
    
        sum_i_j = 0;
        //行列の成分の添字の変換に関するhtmlを作成
        str_ic += '<div style="margin:5px 0px;">'
        for (var i=0; i<list_ic.length;i++){
            sum_i += 1;
            sum_i_j += 1;
            list_ic_mn_i = list_ic_mn[i].toString();
            console.log(list_ic_mn_i);
            console.log(list_ic_mn_i.length);
            console.log(list_ic[i]);
            //通常
            if(list_ic_mn_i == "0"){
                if(list_ic_num[i] != "1"){
                    str_ic += '以下の変換箇所は複数箇所存在します。<br/>以下で最も多くの箇所に適用したいルールを選択してください。<br/>'
                }
                str_ic += '・<math xmlns="http://www.w3.org/1998/Math/MathML">' + list_ic[i] + '</math>の添字にInvisibleCommaを挿入しますか。<br/><input class="js-check_ic' + sum_i_j + '" type="radio" name="ic' + sum_i_j + '" value="0" id="ic' + sum_i_j + '"><label for="ic' + sum_i_j + '">挿入する</label><br/><input class="js-check_ic' + sum_i_j + '" type="radio" name="ic' + sum_i_j + '" value="1" id="vec' + sum_i_j + '"><label for="vec' + sum_i_j + '">挿入しない</label><br/><br/>';
            //mrowの要素が1つかつ３文字以上のmnの場合、行列を選択した際に表示する部分
            }else{
                if(list_ic_num[i] != "1"){
                    str_ic += '以下の変換箇所は複数箇所存在します。<br/>以下で最も多くの箇所に適用したいルールを選択してください。<br/>'
                }
                str_ic += '・<math xmlns="http://www.w3.org/1998/Math/MathML">' + list_ic[i] + '</math>の添字にInvisibleCommaを挿入しますか。<br/><input class="js-check_ic' + sum_i_j + '" type="radio" name="ic' + sum_i_j + '" value="0" id="ic' + sum_i_j + '" onclick="formSwitch3(' + sum_i_j + ');"><label for="ic' + sum_i_j + '">挿入する</label><br/><input class="js-check_ic' + sum_i_j + '" type="radio" name="ic' + sum_i_j + '" value="1" id="vec' + sum_i_j + '" onclick="formSwitch3(' + sum_i_j + ');"><label for="vec' + sum_i_j + '">挿入しない</label><br/>';
                str_ic += '<span id="mn_selecter' + sum_i_j + '" style="padding:10px 10px; margin:0px 30px; background:lightblue;display:none;">添字のy成分の1文字目とする数字を選択してください。<br/>';
                for(var j=1; j<list_ic_mn_i.length;j++){
                    str_ic += '<input type="radio" name="ic_mn' + sum_i_j + '" value="' + j + '">' + list_ic_mn_i[j];
                }
                str_ic += '</span>';
            }
            //同じルールを適用できる箇所を表示
            if(list_ic_num[i] != "1"){
                //普通のケース
                if(list_ic_mn_i == "0"){
                    str_ic += '<div style="padding:10px 10px; margin:0px 30px; background:lightgray">上記で選択したものと同じルールを適用する箇所にチェックをつけてください。<br/>同じルールを適用しない場合には新しいルールを設定してください。<br/><form name="form"><label><input type="checkbox" name="all' + sum_i + '" onClick="AllChecked(0,' + sum_i + ',' + sum_j + ',' + list_ic_num[i] + ');" />全て選択</label><br/>'
                }
                //mrowの要素が1つかつ３文字以上のmnの場合、行列を選択した際に表示する部分
                else{
                    str_ic += '<div style="padding:10px 10px; margin:0px 30px; background:lightgray">上記で選択したものと同じルールを適用する箇所にチェックをつけてください。<br/>同じルールを適用しない場合には新しいルールを設定してください。<br/><form name="form"><label><input type="checkbox" name="all' + sum_i + '" onClick="AllChecked(1,' + sum_i + ',' + sum_j + ',' + list_ic_num[i] + ');" />全て選択</label><br/>'
                }
                for(var j=0; j<list_ic_num[i];j++){
                    sum_j += 1;
                    sum_i_j += 1;
                    //普通のケース
                    if(list_ic_mn_i == "0"){
                        str_ic += '<label><input class="same_rule-check' + sum_j + '" type="checkbox" name="samerule' + sum_i + '" value="' + j + '"  onClick="DisChecked(' + sum_i + ')">' + (j+1) + '箇所目</label><br/>'
                    }
                    //mrowの要素が1つかつ３文字以上のmnの場合、行列を選択した際に表示する部分
                    else{
                        console.log("mn0")
                        sum_i_j_minus_j = sum_i_j - j;
                        str_ic += '<label><input class="same_rule-check' + sum_j + '" type="checkbox" name="samerule' + sum_i + '" value="' + j + '"  onClick="DisChecked(' + sum_i + ');formSwitch2(' + sum_j + ')">' + (j+1) + '箇所目</label><br/>'
                        str_ic += '<span id="same_rule' + sum_j + '" style="display:block;">・<math xmlns="http://www.w3.org/1998/Math/MathML">' + list_ic[i] + '</math>の添字にInvisibleCommaを挿入しますか。<br/><input class="js-check_ic' + sum_i_j + '" type="radio" name="ic' + sum_i_j + '" value="0" id="ic' + sum_i_j + '" onclick="formSwitch3(' + sum_i_j + ')"><label for="ic' + sum_i_j + '">挿入する</label><br/><input class="js-check_ic' + sum_i_j + '" type="radio" name="ic' + sum_i_j + '" value="1" id="vec' +  sum_i_j+ '" onclick="formSwitch3(' + sum_i_j + ')"><label for="vec' + sum_i_j + '">挿入しない</label><br/><br/>';
                        str_ic += '<span id="mn_selecter' + sum_i_j + '" style="display:none;">添字のy成分の1文字目とする数字を選択してください。<br/>';
                        for(var k=1; k<list_ic_mn_i.length;k++){
                            console.log(list_ic_mn_i[k]);
                            str_ic += '<input type="radio" name="ic_mn' + sum_i_j + '" value="' + k + '">' + list_ic_mn_i[k];
                        }
                        str_ic += '</span><br/></span><br/>';
                    }
                }
                str_ic += '</form></div><br/>'
            }
            console.log(str_ic);
        }
        str_ic += '</div>'
        
        //ネイピア数eの変換に関するhtmlを作成
        str_e += '<div style="margin:5px 0px;">'
        for (var i=0; i<list_e.length;i++){
            console.log("e")
            sum_i += 1;
            if(list_e_num[i] != "1"){
                str_e += '以下の変換箇所は複数箇所存在します。<br/>以下で最も多くの箇所に適用したいルールを選択してください。<br/>'
            }
            str_e += '・<math xmlns="http://www.w3.org/1998/Math/MathML">' + list_e[i] + '</math>はネイピア数ですか、それとも変数ですか。<br/><input class="js-check' + i + '" type="radio" name="e' + i + '" value="0" id="napier' + i + '"><label for="napier' + i + '">ネイピア数</label><br/><input class="js-check' + i + '" type="radio" name="e' + i + '" value="1" id="variableE' + i + '"><label for="variableE' + i + '">変数</label><br/><br/>';
            
            //同じルールを適用できる箇所を表示
            if(list_e_num[i] != "1"){
                str_e += '<div style="padding:10px 10px; margin:0px 30px; background:lightgray">上記で選択したものと同じルールを適用する箇所にチェックをつけてください。<br/><form name="form"><label><input type="checkbox" name="all' + sum_i + '" onClick="AllChecked(0,' + sum_i + ',' + sum_j + ',' + list_e_num[i] + ');" />全て選択</label><br/>'
                for(var j=0; j<list_e_num[i];j++){
                    sum_j += 1;
                    str_e += '<label><input type="checkbox" name="samerule' + sum_i + '" value="' + j + '"  onClick="DisChecked(' + sum_i + ');">' + (j+1) + '箇所目</label></div><br/>'
                }
                str_e += '</form><br/>'
            }
        }
        str_e += '</div>'
        //転置行列の変換に関するhtmlを作成
        str_tenchi += '<div style="margin:5px 0px;">'
        for (var i=0; i<list_tenchi.length;i++){
            sum_i += 1;
            if(list_tenchi_num[i] != "1"){
                str_tenchi += '以下の変換箇所は複数箇所存在します。<br/>以下で最も多くの箇所に適用したいルールを選択してください。<br/>'
            }
            str_tenchi += '・<math xmlns="http://www.w3.org/1998/Math/MathML">' + list_tenchi[i] + '</math>は転置行列ですか、それともべき乗ですか。<br/><input class="js-check' + i + '" type="radio" name="tenchi' + i + '" value="0" id="tenchi' + i + '"><label for="tenchi' + i + '">転置行列</label><br/><input class="js-check' + i + '" type="radio" name="tenchi' + i + '" value="1" id="power' + i + '"><label for="power' + i + '">べき乗</label><br/><br/>';
            
            //同じルールを適用できる箇所を表示
            if(list_tenchi_num[i] != "1"){
                str_tenchi += '<div style="padding:10px 10px; margin:0px 30px; background:lightgray">上記で選択したものと同じルールを適用する箇所にチェックをつけてください。<br/><form name="form"><label><input type="checkbox" name="all' + sum_i + '" onClick="AllChecked(0,' + sum_i + ',' + sum_j + ',' + list_tenchi_num[i] + ');" />全て選択</label><br/>'
                for(var j=0; j<list_tenchi_num[i];j++){
                    sum_j += 1;
                    str_tenchi += '<label><input type="checkbox" name="samerule' + sum_i + '" value="' + j + '"  onClick="DisChecked(' + sum_i + ');">' + (j+1) + '箇所目</label><br/>'
                }
                str_tenchi += '</form></div>'
            }
        }
        str_tenchi += '</di>'
        
        //微分の変換に関するhtmlを作成
        str_d += '<div style="margin:5px 0px;">'
        for (var i=0; i<list_d.length;i++){
            sum_i += 1;
            if(list_d_num[i] != "1"){
                str_d += '以下の変換箇所は複数箇所存在します。<br/>以下で最も多くの箇所に適用したいルールを選択してください。<br/>'
            }
            console.log(list_d[i])
            str_d += '・<math xmlns="http://www.w3.org/1998/Math/MathML">' + list_d[i] + '</math>の「d」は微分記号ですか、それとも文字ですか。<br/><input class="js-check' + i + '" type="radio" name="d' + i + '" value="0" id="d' + i + '"><label for="d' + i + '">微分記号</label><br/><input class="js-check' + i + '" type="radio" name="d' + i + '" value="1" id="power' + i + '"><label for="power' + i + '">文字</label><br/><br/>';
            
            //同じルールを適用できる箇所を表示
            if(list_d_num[i] != "1"){
                str_d += '<div style="padding:10px 10px; margin:0px 30px; background:lightgray">上記で選択したものと同じルールを適用する箇所にチェックをつけてください。<br/><form name="form"><label><input type="checkbox" name="all' + sum_i + '" onClick="AllChecked(0,' + sum_i + ',' + sum_j + ',' + list_d_num[i] + ');" />全て選択</label><br/>'
                for(var j=0; j<list_d_num[i];j++){
                    sum_j += 1;
                    str_d += '<label><input type="checkbox" name="samerule' + sum_i + '" value="' + j + '"  onClick="DisChecked(' + sum_i + ');">' + (j+1) + '箇所目</label><br/>'
                }
                str_d += '</form></div>'
            }
        }
        str_d += '</di>'
        
        //console.log(list_af_or_it);
        //console.log(list_af_or_zahyou);
        //console.log(list_ip);
        //console.log(list_ic);
        //console.log(list_mi);
        //console.log(str_af_or_it);
        
        document.getElementById('str_none').innerHTML = str_none;
        document.getElementById('str_mi_henkan').innerHTML = str_mi_henkan;
        document.getElementById('str_af_or_it').innerHTML = str_af_or_it;
        document.getElementById('str_af_or_zahyou').innerHTML = str_af_or_zahyou;
        document.getElementById('str_ip').innerHTML = str_ip;
        document.getElementById('str_ic').innerHTML = str_ic;
        document.getElementById('str_e').innerHTML = str_e;
        document.getElementById('str_tenchi').innerHTML = str_tenchi;
        document.getElementById('str_d').innerHTML = str_d;
        

        //var selecter = document.getElementById('mi_selecter');
        //変数の変換でラジオボタンの「複数の変数として〜」の方を選んだらチェックボックスが表示される
        function formSwitch(num,lengthNot2) {
            check = document.getElementsByClassName('js-check' + num);
            var selecter = document.getElementById('mi_selecter' + num);
            //selecter.style.display = "none";
            if (check[0].checked) {
                selecter.style.display = "none";

            } else if (check[1].checked && lengthNot2) {
                selecter.style.display = "block";
            } else {
                selecter.style.display = "none";
            }
        }
   
        //同じルールを適用するかの箇所で「n箇所目」のチェックが外れていたらルール選択のフォームが表示される
        function formSwitch2(num) {
            check = document.getElementsByClassName('same_rule-check' + num);
            var selecter = document.getElementById('same_rule' + num);
            selecter.style.display = "block";
            if (check[0].checked) {
                selecter.style.display = "none";

            } else {
                selecter.style.display = "block";
            }
        }
        //window.addEventListener('load', formSwitch(i));
    //添字の変換で、mrowの要素が1つかつ３文字以上のmnの場合、ラジオボタンの「挿入する」の方を選んだら更にラジオボタンが表示される
        function formSwitch3(num) {
            check = document.getElementsByClassName('js-check_ic' + num);
            var selecter = document.getElementById('mn_selecter' + num);
            //selecter.style.display = "none";
            if (check[0].checked) {
                selecter.style.display = "block";
            } else {
                selecter.style.display = "none";
            }
        }
    //添字の変換で、mrowの要素が1つかつ３文字以上のmnの場合、ラジオボタンの「挿入する」の方を選んだら更にラジオボタンが表示される
    /*
        function formSwitch3(num1, num2, num3) {
            check = document.getElementsByClassName('js-check_ic' + num1);
            var selecter = document.getElementById('mn_selecter' + num1);
            //selecter.style.display = "none";
            if (check[0].checked) {
                selecter.style.display = "block";
                for(var j=1; j<num3;j++){
                    num4 = num2 + j;
                    var selecter2 = document.getElementById('same_rule' + num4);
                    selecter2.style.display = "block";
                }
                
            } else if (check[1].checked) {
                selecter.style.display = "none";
                for(var j=1; j<num3;j++){
                    num4 = num2 + j;
                    var selecter2 = document.getElementById('same_rule' + num4);
                    selecter2.style.display = "none";
                }
            } else {
                selecter.style.display = "none";
            }
        }*/
    
    
        
    
        // 「全て選択」チェックで全てにチェック付く
        function AllChecked(formswitch_2,num,num2,num3){
            let checkbox_all = document.getElementsByName('all' + num);
            var all = checkbox_all[0].checked;
            let checkbox_samerule = document.getElementsByName('samerule' + num);
            for (var i=0; i<checkbox_samerule.length; i++){
                checkbox_samerule[i].checked = all;
                if(formswitch_2 == 1){
                    for(var j=1; j<num3+1;j++){
                        formSwitch2(num2+j);
                    }
                }
            }
        }
        // 一つでもチェックを外すと「全て選択」のチェック外れる
        function DisChecked(num){
            let checkbox_all = document.getElementsByName('all' + num);
            let checkbox_samerule = document.getElementsByName('samerule' + num);
            var checksCount = 0;
            for (var i=0; i<checkbox_samerule.length; i++){
              if(checkbox_samerule[i].checked == false){
                checkbox_all[0].checked = false;
              }else{
                checksCount += 1;
                if(checksCount == checkbox_samerule.length){
                  checkbox_all[0].checked = true;
                }
              }
            }
        }
    </script>
    <%= link_to ("/normalizations/conversion") do %>
        <input type="button" value="変換" id="conversion" style="font-size:100px; width:150px; height:50px; padding:20px; box-sizing:border-box; cursor:pointer">
    <% end %>
    <!--
    <input type="button" value="ルールを保存" id="conversion">
    -->
    </p>
    
    <script src="https://code.jquery.com/jquery-3.0.0.min.js"></script>
    <script>
        //ルールを送信
        let conversionButton = document.getElementById('conversion');
        
        //変換ボタンを押したら以下の処理を行う
        conversionButton.onclick = function buttonClick(){
            let checkValue = '';
            let rule_mi ="";
            let rule_mi_multi ="";
            let rule_af_or_it ="";
            let rule_af_or_zahyou ="";
            let rule_ip ="";
            let rule_ic ="";
            let rule_ic_mn ="";
            let rule_e ="";
            let rule_tenchi ="";
            let rule_d ="";
            let sum_i = 0;
            let sum_j = 0;
            let sum_i_j = 0;

            //変数の変換ルールをリストに格納
            for(var i=0; i<list_mi_henkan.length;i++){
                sum_i += 1;
                sum_i_j += 1;
                
                //同じルールを適用できる箇所がない場合
                if(list_mi_henkan_num[i] == 1){
                    //一つの変数or複数の変数
                    let Radio = document.getElementsByName('integer' + sum_i_j);
                    let lenRadio = Radio.length;
                    let original_rule_mi = "";
                    //console.log(len);
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                        }
                    }
                    rule_mi += checkValue;
                    
                    //複数の変数として扱う場合の変換ルール
                    let integerCheckbox = document.getElementsByName('multi' + sum_i_j);
                    let lenCheckbox = integerCheckbox.length;
                    let original_rule_mi_multi = "";
                    for (let j = 0; j < lenCheckbox; j++){
                        if(integerCheckbox.item(j).checked){
                            rule_mi_multi += integerCheckbox.item(j).value;
                        }
                        if(j == lenCheckbox-1){
                            rule_mi_multi += ",";
                        }
                    }
                }
                
                //同じルールを適用できる箇所があった場合
                else{
                    //最も多くの箇所に適用するルールを取得
                    //一つの変数or複数の変数
                    let Radio = document.getElementsByName('integer' + sum_i_j);
                    let lenRadio = Radio.length;
                    let original_rule_mi = "";
                    //console.log(len);
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                            original_rule_mi = checkValue;
                        }
                    }
                    
                    //複数の変数として扱う場合の変換ルール
                    let integerCheckbox = document.getElementsByName('multi' + sum_i_j);
                    let lenCheckbox = integerCheckbox.length;
                    let original_rule_mi_multi = "";
                    for (let j = 0; j < lenCheckbox; j++){
                        if(integerCheckbox.item(j).checked){
                            original_rule_mi_multi += integerCheckbox.item(j).value;
                        }
                    }
                    
                    //それぞれの箇所についてルールを取得
                    let samerule_checkbox = document.getElementsByName('samerule' + i);
                    for(var j=0; j<list_mi_henkan_num[i];j++){
                        sum_j += 1;
                        sum_i_j += 1;
                        //同じルールを適用する場合
                        if(samerule_checkbox[j].checked){
                            rule_mi += original_rule_mi;
                            rule_mi_multi += original_rule_mi_multi;
                            rule_mi_multi += ",";
                        }else{//新しいルールを適用する場合
                            let Radio = document.getElementsByName('integer' + sum_i_j);
                            let lenRadio = Radio.length;
                            let integerCheckbox = document.getElementsByName('multi' + sum_i_j);
                            let lenCheckbox = integerCheckbox.length;
                            for (let k = 0; k < lenRadio; k++){
                                if (Radio.item(k).checked){
                                    checkValue = Radio.item(k).value;
                                }
                            }
                            rule_mi += checkValue;
                            for (let k = 0; k < lenCheckbox; k++){
                                if(integerCheckbox.item(k).checked){
                                    rule_mi_multi += integerCheckbox.item(k).value;
                                }
                                if(k == lenCheckbox-1){
                                    rule_mi_multi += ",";
                                }
                            }
                        }
                    }
                }
            }
            
            //関数か変数かの変換ルールをリストに格納
            for(var i=0; i<list_af_or_it.length;i++){
                sum_i += 1;
                //同じルールを適用できる箇所がない場合
                if(list_af_or_it_num[i] == 1){
                    //関数or変数
                    Radio = document.getElementsByName('af_or_it' + i);
                    lenRadio = Radio.length;
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                        }
                    }
                    rule_af_or_it += checkValue;
                }
                
                //同じルールを適用できる箇所があった場合
                else{
                    //最も多くの箇所に適用するルールを取得
                    //関数or変数
                    Radio = document.getElementsByName('af_or_it' + i);
                    lenRadio = Radio.length;
                    let original_rule_af_or_it = "";
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                            original_rule_af_or_it = checkValue;
                        }
                    }
                    
                    //それぞれの箇所についてルールを取得
                    let samerule_checkbox = document.getElementsByName('samerule' + sum_i);
                    for(var j=0; j<list_af_or_it_num[i];j++){
                        sum_j += 1;
                        //同じルールを適用する場合
                        if(samerule_checkbox[j].checked){
                            rule_af_or_it += original_rule_af_or_it;
                        }else{//新しいルールを適用する場合
                            if(original_rule_af_or_it == 0){
                                rule_af_or_it += 1;
                            }else{
                                rule_af_or_it += 0;
                            }
                        }
                    }
                }
            }
            
            //関数か座標かの変換ルールをリストに格納
            for(var i=0; i<list_af_or_zahyou.length;i++){
                sum_i += 1;
                //同じルールを適用できる箇所がない場合
                if(list_af_or_zahyou_num[i] == 1){
                    //関数or座標
                    Radio = document.getElementsByName('af_or_zahyou' + i);
                    lenRadio = Radio.length;
                    let original_rule_af_or_zahyou = "";
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                        }
                    }
                    rule_af_or_zahyou += checkValue;
                }
                
                //同じルールを適用できる箇所があった場合
                else{
                    //最も多くの箇所に適用するルールを取得
                    //関数or座標
                    Radio = document.getElementsByName('af_or_zahyou' + i);
                    lenRadio = Radio.length;
                    let original_rule_af_or_zahyou = "";
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                            original_rule_af_or_zahyou = checkValue;
                        }
                    }
                    
                    //それぞれの箇所についてルールを取得
                    let samerule_checkbox = document.getElementsByName('samerule' + sum_i);
                    for(var j=0; j<list_af_or_zahyou_num[i];j++){
                        sum_j += 1;
                        //同じルールを適用する場合
                        if(samerule_checkbox[j].checked){
                            rule_af_or_zahyou += original_rule_af_or_zahyou;
                        }else{//新しいルールを適用する場合
                            if(original_rule_af_or_zahyou == 0){
                                rule_af_or_zahyou += 1;
                            }else{
                                rule_af_or_zahyou += 0;
                            }
                        }
                    }
                }
            }
            
            //帯分数か乗算かの変換ルールをリストに格納
            for(var i=0; i<list_ip.length;i++){
                sum_i += 1;
                //同じルールを適用できる箇所がない場合
                if(list_ip_num[i] == 1){
                    //帯分数or乗算
                    Radio = document.getElementsByName('ip' + i);
                    lenRadio = Radio.length;
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                        }
                    }
                    rule_ip += checkValue;
                }
                
                //同じルールを適用できる箇所があった場合
                else{
                    //最も多くの箇所に適用するルールを取得
                    //帯分数or乗算
                    Radio = document.getElementsByName('ip' + i);
                    lenRadio = Radio.length;
                    let original_rule_ip = "";
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                            original_rule_ip = checkValue;
                        }
                    }
                    
                    //それぞれの箇所についてルールを取得
                    let samerule_checkbox = document.getElementsByName('samerule' + sum_i);
                    for(var j=0; j<list_ip_num[i];j++){
                        sum_j += 1;
                        //同じルールを適用する場合
                        if(samerule_checkbox[j].checked){
                            rule_ip += original_rule_ip;
                        }else{//新しいルールを適用する場合
                            if(original_rule_ip == 0){
                                rule_ip += 1;
                            }else{
                                rule_ip += 0;
                            }
                        }
                    }
                }
            }
            
            sum_i_j = 0;
            
            //行列かベクトルかの変換ルールをリストに格納
            for(var i=0; i<list_ic.length;i++){
                sum_i += 1;
                sum_i_j += 1;
                //同じルールを適用できる箇所がない場合
                if(list_ic_num[i] == 1){
                    //一つの変数or複数の変数
                    let Radio = document.getElementsByName('ic' + sum_i_j);
                    let lenRadio = Radio.length;
                    let original_rule_ic = "";
                    
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            rule_ic += Radio.item(j).value;
                            original_rule_ic = Radio.item(j).value;
                            break;
                        }
                    }
                //mrowの要素が1つかつ３文字以上のmnの場合、行列を選択した際に表示する部分。mnをどこで区切るか
                    if(list_ic_mn[i] != "0" && original_rule_ic == "0"){
                        let mn_Radio = document.getElementsByName('ic_mn' + sum_i_j);
                        let len_mn_Radio = mn_Radio.length;
                        for (let j = 0; j < len_mn_Radio; j++){
                            if(mn_Radio.item(j).checked){
                                rule_ic_mn += mn_Radio.item(j).value;
                                break;
                            }
                        }
                    }
                }
                
                //同じルールを適用できる箇所があった場合
                else{
                    //最も多くの箇所に適用するルールを取得
                    //一つの変数or複数の変数
                    let Radio = document.getElementsByName('ic' + sum_i_j);
                    let lenRadio = Radio.length;
                    let original_rule_ic = "";
                    let original_rule_ic_mn = "";
                    
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            original_rule_ic = Radio.item(j).value;
                            break;
                        }
                    }
                //mrowの要素が1つかつ３文字以上のmnの場合、行列を選択した際に表示する部分。mnをどこで区切るか
                    if(list_ic_mn[i] != "0" && original_rule_ic == "0"){
                        let mn_Radio = document.getElementsByName('ic_mn' + sum_i_j);
                        let len_mn_Radio = mn_Radio.length;
                        for (let j = 0; j < len_mn_Radio; j++){
                            if(mn_Radio.item(j).checked){
                                original_rule_ic_mn = mn_Radio.item(j).value;
                                break;
                            }
                        }
                    }
                    
                    //それぞれの箇所についてルールを取得
                    let samerule_checkbox = document.getElementsByName('samerule' + sum_i);
                    for(var j=0; j<list_ic_num[i];j++){
                        sum_j += 1;
                        sum_i_j += 1;
                        //同じルールを適用する場合
                        if(samerule_checkbox[j].checked){
                            rule_ic += original_rule_ic;
                            //mnをどこで区切るか
                            if(list_ic_mn[i] != "0" && original_rule_ic == "0"){
                                rule_ic_mn += original_rule_ic_mn;
                            }
                        }else{//新しいルールを適用する場合
                            let new_rule_ic = "";
                            //普通のケース
                            if(list_ic_mn[i] == "0" || original_rule_ic != "0"){
                                //元のルールと逆
                                rule_ic += Math.abs(original_rule_ic - 1);
                            }
                            //mrowの要素が1つかつ３文字以上のmnの場合、行列を選択した際
                            else{
                                let Radio = document.getElementsByName('ic' + sum_i_j);
                                let lenRadio = Radio.length;
                                for (let k = 0; k < lenRadio; k++){
                                    if (Radio.item(k).checked){
                                        rule_ic += Radio.item(k).value;
                                        new_rule_ic = Radio.item(k).value;
                                        break;
                                    }
                                }
                                //mnをどこで区切るか
                                if(new_rule_ic == "0"){
                                    let mn_Radio = document.getElementsByName('ic_mn' + sum_i_j);
                                    let len_mn_Radio = mn_Radio.length;
                                    for (let k = 0; k < len_mn_Radio; k++){
                                        if(mn_Radio.item(k).checked){
                                            rule_ic_mn += mn_Radio.item(k).value;
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            
            //ネイピア数か変数かの変換ルールをリストに格納
            for(var i=0; i<list_e.length;i++){
                sum_i += 1;
                //同じルールを適用できる箇所がない場合
                if(list_e_num[i] == 1){
                    //帯分数or乗算
                    Radio = document.getElementsByName('e' + i);
                    lenRadio = Radio.length;
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                        }
                    }
                    rule_e += checkValue;
                }
                
                //同じルールを適用できる箇所があった場合
                else{
                    //最も多くの箇所に適用するルールを取得
                    //帯分数or乗算
                    Radio = document.getElementsByName('e' + i);
                    lenRadio = Radio.length;
                    let original_rule_e = "";
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                            original_rule_e = checkValue;
                        }
                    }
                    
                    //それぞれの箇所についてルールを取得
                    let samerule_checkbox = document.getElementsByName('samerule' + sum_i);
                    for(var j=0; j<list_e_num[i];j++){
                        sum_j += 1;
                        //同じルールを適用する場合
                        if(samerule_checkbox[j].checked){
                            rule_e += original_rule_e;
                        }else{//新しいルールを適用する場合
                            if(original_rule_e == 0){
                                rule_e += 1;
                            }else{
                                rule_e += 0;
                            }
                        }
                    }
                }
            }
            
            //転置行列か冪乗かの変換ルールをリストに格納
            for(var i=0; i<list_tenchi.length;i++){
                sum_i += 1;
                //同じルールを適用できる箇所がない場合
                if(list_tenchi_num[i] == 1){
                    //帯分数or乗算
                    Radio = document.getElementsByName('tenchi' + i);
                    lenRadio = Radio.length;
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                        }
                    }
                    rule_tenchi += checkValue;
                }
                
                //同じルールを適用できる箇所があった場合
                else{
                    //最も多くの箇所に適用するルールを取得
                    //帯分数or乗算
                    Radio = document.getElementsByName('tenchi' + i);
                    lenRadio = Radio.length;
                    let original_rule_tenchi = "";
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                            original_rule_tenchi = checkValue;
                        }
                    }
                    
                    //それぞれの箇所についてルールを取得
                    let samerule_checkbox = document.getElementsByName('samerule' + sum_i);
                    for(var j=0; j<list_tenchi_num[i];j++){
                        sum_j += 1;
                        //同じルールを適用する場合
                        if(samerule_checkbox[j].checked){
                            rule_tenchi += original_rule_tenchi;
                        }else{//新しいルールを適用する場合
                            if(original_rule_tenchi == 0){
                                rule_tenchi += 1;
                            }else{
                                rule_tenchi += 0;
                            }
                        }
                    }
                }
            }
            
            //微分記号か文字かの変換ルールをリストに格納
            for(var i=0; i<list_d.length;i++){
                sum_i += 1;
                //同じルールを適用できる箇所がない場合
                if(list_d_num[i] == 1){
                    //帯分数or乗算
                    Radio = document.getElementsByName('d' + i);
                    lenRadio = Radio.length;
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                        }
                    }
                    rule_d += checkValue;
                }
                
                //同じルールを適用できる箇所があった場合
                else{
                    //最も多くの箇所に適用するルールを取得
                    //帯分数or乗算
                    Radio = document.getElementsByName('d' + i);
                    lenRadio = Radio.length;
                    let original_rule_d = "";
                    //Radio[1].checked = true;
                    for (let j = 0; j < lenRadio; j++){
                        if (Radio.item(j).checked){
                            checkValue = Radio.item(j).value;
                            original_rule_d = checkValue;
                        }
                    }
                    
                    //それぞれの箇所についてルールを取得
                    let samerule_checkbox = document.getElementsByName('samerule' + sum_i);
                    for(var j=0; j<list_d_num[i];j++){
                        sum_j += 1;
                        //同じルールを適用する場合
                        if(samerule_checkbox[j].checked){
                            rule_d += original_rule_d;
                        }else{//新しいルールを適用する場合
                            if(original_rule_d == 0){
                                rule_d += 1;
                            }else{
                                rule_d += 0;
                            }
                        }
                    }
                }
            }
            
            //いずれかのルール適用箇所が存在しない場合
            if(rule_mi == ""){
                rule_mi = "null";
            }
            if(rule_mi_multi == ""){
                rule_mi_multi = "null";
            }
            if(rule_af_or_it == ""){
                rule_af_or_it = "null";
            }
            if(rule_af_or_zahyou == ""){
                rule_af_or_zahyou = "null";
            }
            if(rule_ip == ""){
                rule_ip = "null";
            }
            if(rule_ic == ""){
                rule_ic = "null";
            }
            if(rule_ic_mn == ""){
                rule_ic_mn = "null";
            }
            if(rule_e == ""){
                rule_e = "null";
            }
            if(rule_tenchi == ""){
                rule_tenchi = "null";
            }
            if(rule_d == ""){
                rule_d = "null";
            }
            
            $(function(){
                $.ajax({
                  url: '/normalizations/conversion',
                  type: 'GET',
                  //dataType: 'json',
                  data: {
                       rule_mi:rule_mi,
                       rule_mi_multi:rule_mi_multi,
                       rule_af_or_it:rule_af_or_it,
                       rule_af_or_zahyou:rule_af_or_zahyou,
                       rule_ip:rule_ip,
                       rule_ic:rule_ic,
                       rule_ic_mn:rule_ic_mn,
                       rule_e:rule_e,
                       rule_tenchi:rule_tenchi,
                       rule_d:rule_d
                  },
                })
                .done(function(data) {
                      console.log("success");
                    // 通信成功時の処理を記述
                })
                .fail(function() {
                    console.log("fail");
                    // 通信失敗時の処理を記述
                });
              });
        }
    </script>

    </div>
  </body>
</html>
